{"version":3,"file":"index.esm.js","sources":["../src/context.tsx","../src/paths.ts","../src/themes/__shared__.ts","../src/themes/anOldHopeClassic.ts","../src/themes/github.ts","../src/themes/monokai.ts","../src/themes/monokaiSublime.ts","../src/themes/vscodeDark.ts","../src/themes/vscodeLight.ts","../src/react-jason.tsx"],"sourcesContent":["import React, {createContext, createElement, useCallback, useContext} from 'react'\nimport {JasonContextInstance, JasonTheme, TokenMachine, TokenType} from './types'\n\n// We're always rendering the context with values, thus \"any\"\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const JasonContext = createContext<JasonContextInstance>({} as any)\n\nexport function useTokenMachine(): {token: TokenMachine; char: (sym: string) => JSX.Element} {\n  const {token} = useContext(JasonContext)\n  const char = useCallback(\n    (sym: string) => token(sym === '\"' || sym === \"'\" ? 'quotation' : 'punctuation', sym),\n    [token],\n  )\n  return {token, char}\n}\n\nexport function useToken(token: TokenType, children?: React.ReactNode, as = 'span'): JSX.Element {\n  return useTokenMachine().token(token, children, as)\n}\n\nexport function createTokenMachine(theme: JasonTheme): TokenMachine {\n  return function tokenMachine(\n    token: TokenType,\n    children?: React.ReactNode,\n    as = 'span',\n  ): JSX.Element {\n    const style = theme.styles ? theme.styles[token] : undefined\n    const className = theme.classes ? theme.classes[token] : undefined\n    const styled = Boolean(style || className)\n    return styled ? createElement(as, {style, className}, children) : <>{children}</>\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport {ItemKeyGenerator} from './types'\n\nexport const defaultItemKeyGenerator: ItemKeyGenerator = (\n  // @ts-ignore\n  item: unknown,\n  basePath: string,\n  index: number,\n) => {\n  return `${basePath}[${index}]`\n}\n\nexport const sanityItemKeyGenerator: ItemKeyGenerator = (\n  item: unknown,\n  basePath: string,\n  index: number,\n) => {\n  return isKeyedObject(item) ? `${basePath}[_key==\"${item._key}\"]` : `${basePath}[${index}]`\n}\n\nfunction isObject(obj: unknown): obj is Record<string, unknown> {\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj)\n}\n\nfunction isKeyedObject(obj: unknown): obj is {_key: string} {\n  return isObject(obj) && typeof obj._key === 'string'\n}\n","import {CSSProperties} from 'react'\n\nexport const sharedRoot: CSSProperties = {\n  fontFamily: 'Menlo, Monaco, \"Courier New\", monospace',\n  fontFeatureSettings: '\"liga\" 0, \"calt\" 0',\n  lineHeight: '1.5em',\n  whiteSpace: 'pre',\n  margin: 0,\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#1e2024'}),\n    attribute: {color: '#ef415a'},\n    unquotedAttribute: {color: '#d1d3d7'},\n    string: {color: '#57bedf'},\n    nil: {color: '#f2851e'},\n    number: {color: '#f2851e'},\n    boolean: {color: '#f2851e'},\n    punctuation: {color: '#d1d3d7'},\n  },\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#f8f8f8'}),\n    attribute: {color: '#333'},\n    unquotedAttribute: {color: '#333'},\n    string: {color: '#de1044'},\n    nil: {color: '#008080'},\n    number: {color: '#008080'},\n    boolean: {color: '#008080'},\n    punctuation: {color: '#333'},\n  },\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#2c2d25'}),\n    attribute: {color: '#ddd'},\n    unquotedAttribute: {color: '#ddd'},\n    string: {color: '#a7e12e'},\n    nil: {color: '#fa2572'},\n    number: {color: '#ddd'},\n    boolean: {color: '#fa2572'},\n    punctuation: {color: '#ddd'},\n  },\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#23241e'}),\n    attribute: {color: '#fa2572'},\n    unquotedAttribute: {color: '#fa2572'},\n    string: {color: '#e6db74'},\n    nil: {color: '#ae81ff'},\n    number: {color: '#ae81ff'},\n    boolean: {color: '#ae81ff'},\n    punctuation: {color: '#f8f8f2'},\n  },\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#212121'}),\n    attribute: {color: '#a5e1ff'},\n    unquotedAttribute: {color: '#d9d9d9'},\n    string: {color: '#d49a81'},\n    nil: {color: '#5da8dd'},\n    number: {color: '#bed4b0'},\n    boolean: {color: '#5da8dd'},\n    punctuation: {color: '#d9d9d9'},\n  },\n}\n","import {sharedRoot} from './__shared__'\n\nexport default {\n  styles: {\n    root: Object.assign({}, sharedRoot, {backgroundColor: '#fff'}),\n    attribute: {color: '#005db1'},\n    unquotedAttribute: {color: '#000'},\n    string: {color: '#ad0b04'},\n    nil: {color: '#141aff'},\n    number: {color: '#019162'},\n    boolean: {color: '#141aff'},\n    punctuation: {color: '#000'},\n  },\n}\n","import React, {useContext, Fragment} from 'react'\nimport {JasonContext} from './context'\nimport {defaultItemKeyGenerator} from './paths'\nimport {anOldHopeClassic as defaultTheme} from './themes'\nimport {createTokenMachine, useToken, useTokenMachine} from './context'\nimport {\n  EsModuleJasonTheme,\n  ItemKeyGenerator,\n  JasonContextInstance,\n  JasonTheme,\n  NodeType,\n  NodeWrapper as INodeWrapper,\n  ObjectKeySorter,\n} from './types'\n\nexport interface JasonProps {\n  value: unknown\n  theme?: JasonTheme | EsModuleJasonTheme\n  nodeWrapper?: INodeWrapper\n  quoteAttributes?: boolean\n  itemKeyGenerator?: ItemKeyGenerator\n  sortKeys?: boolean | ObjectKeySorter\n}\n\nconst JSON_TYPES = ['string', 'number', 'object', 'boolean']\nconst isJsonType = (item: unknown): boolean => JSON_TYPES.includes(typeof item)\n\nexport const ReactJason = ({\n  value,\n  theme: wrappedTheme,\n  nodeWrapper,\n  itemKeyGenerator,\n  sortKeys = false,\n  quoteAttributes = true,\n}: JasonProps) => {\n  const token = React.useMemo(\n    () => createTokenMachine(wrappedTheme ? unwrapTheme(wrappedTheme) : defaultTheme),\n    [wrappedTheme],\n  )\n\n  const keySorter = sortKeys === true ? defaultKeySorter : sortKeys\n  const getItemKey = itemKeyGenerator || defaultItemKeyGenerator\n  const context = React.useMemo<JasonContextInstance>(\n    () => ({token, getItemKey, quoteAttributes, nodeWrapper, sortKeys: keySorter}),\n    [token, getItemKey, quoteAttributes, nodeWrapper, keySorter],\n  )\n\n  return (\n    <JasonContext.Provider value={context}>\n      {token('root', node({value, path: '', depth: 1, nodeWrapper}), 'pre')}\n    </JasonContext.Provider>\n  )\n}\n\nfunction node({\n  value,\n  path,\n  depth,\n  nodeWrapper: NodeWrapper,\n}: {\n  value: unknown\n  path: string\n  depth: number\n  nodeWrapper?: INodeWrapper\n}): JSX.Element {\n  const wrap = (children: React.ReactElement, type: NodeType) =>\n    NodeWrapper ? (\n      <NodeWrapper path={path} type={type}>\n        {children}\n      </NodeWrapper>\n    ) : (\n      children\n    )\n\n  if (value === null) {\n    return wrap(<NullNode />, 'nil')\n  }\n\n  if (Array.isArray(value)) {\n    return wrap(<ArrayNode value={value} path={path} depth={depth} />, 'array')\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return wrap(<StringNode value={value} path={path} depth={depth} />, 'string')\n    case 'number':\n      return wrap(<NumberNode value={value} path={path} depth={depth} />, 'number')\n    case 'boolean':\n      return wrap(<BooleanNode value={value} path={path} depth={depth} />, 'boolean')\n    case 'object':\n      return wrap(\n        <ObjectNode value={value as Record<string, unknown>} path={path} depth={depth} />,\n        'object',\n      )\n    default:\n      throw new Error(`Unhandled type ${typeof value}`)\n  }\n}\n\nfunction StringNode({value}: {value: string; path: string; depth: number}) {\n  const {char} = useTokenMachine()\n  const unquoted = json(value).slice(1, -1)\n  return useToken(\n    'string',\n    <>\n      {char('\"')}\n      {unquoted}\n      {char('\"')}\n    </>,\n  )\n}\n\nfunction NumberNode({value}: {value: number; path: string; depth: number}) {\n  return useToken('number', value)\n}\n\nfunction BooleanNode({value}: {value: boolean; path: string; depth: number}) {\n  return useToken('boolean', value ? 'true' : 'false')\n}\n\nfunction ArrayNode({value, path, depth}: {value: unknown[]; path: string; depth: number}) {\n  const {token, char} = useTokenMachine()\n  const {getItemKey, nodeWrapper} = useContext(JasonContext)\n  const numItems = value.length\n  if (numItems === 0) {\n    return token(\n      'array',\n      <>\n        {char('[')}\n        {char(']')}\n      </>,\n    )\n  }\n\n  return token(\n    'array',\n    <>\n      {char('[')}\n      {`\\n${indent(depth)}`}\n      {value.map((item, index) => {\n        const itemPath = getItemKey(item, path, index)\n        const isLast = index === numItems - 1\n\n        return (\n          <Fragment key={itemPath}>\n            {isJsonType(item) ? (\n              node({value: item, path: itemPath, depth: depth + 1, nodeWrapper})\n            ) : (\n              <>&lt;{typeof item}&rt;</>\n            )}\n            {isLast ? (\n              `\\n${indent(depth - 1)}`\n            ) : (\n              <>\n                {char(',')}\n                {`\\n${indent(depth)}`}\n              </>\n            )}\n          </Fragment>\n        )\n      })}\n      {char(']')}\n    </>,\n  )\n}\n\nfunction ObjectNode({\n  value: obj,\n  path,\n  depth,\n}: {\n  value: Record<string, unknown>\n  path: string\n  depth: number\n}) {\n  const {nodeWrapper, sortKeys} = useContext(JasonContext)\n  const {token, char} = useTokenMachine()\n  const value = obj as Record<string, unknown>\n  const rawKeys = Object.keys(value)\n  const keys = sortKeys ? rawKeys.sort((a, b) => sortKeys(a, b, value)) : rawKeys\n  const numKeys = keys.length\n  const lastKey = numKeys - 1\n  if (numKeys === 0) {\n    return token(\n      'object',\n      <>\n        {char('{')}\n        {char('}')}\n      </>,\n    )\n  }\n\n  return token(\n    'object',\n    <>\n      {char('{')}\n      {'\\n'}\n      {keys.map((key, index) => {\n        const val = value[key]\n        const propPath = path ? `${path}.${key}` : key\n        if (!isJsonType(val)) {\n          return null\n        }\n\n        return (\n          <Fragment key={propPath}>\n            <AttributePair\n              attribute={key}\n              value={val}\n              depth={depth}\n              path={propPath}\n              nodeWrapper={nodeWrapper}\n              isLastKey={index === lastKey}\n            />\n          </Fragment>\n        )\n      })}\n      {indent(depth - 1)}\n      {char('}')}\n    </>,\n  )\n}\n\nfunction AttributeNode({value}: {value: string}) {\n  const {quoteAttributes} = useContext(JasonContext)\n  const {token, char} = useTokenMachine()\n  const attributeName = json(value).slice(1, -1)\n\n  let attribute: React.ReactNode\n  if (quoteAttributes || attributeName.includes('\"')) {\n    attribute = token(\n      'attribute',\n      <>\n        {char('\"')}\n        {attributeName}\n        {char('\"')}\n      </>,\n    )\n  } else {\n    attribute = token('unquotedAttribute', attributeName)\n  }\n\n  return (\n    <>\n      {attribute}\n      {char(':')}{' '}\n    </>\n  )\n}\n\nfunction AttributePair({\n  attribute,\n  value,\n  path,\n  depth,\n  isLastKey,\n  nodeWrapper: NodeWrapper,\n}: {\n  attribute: string\n  value: unknown\n  path: string\n  depth: number\n  nodeWrapper?: INodeWrapper\n  isLastKey: boolean\n}) {\n  const {char} = useTokenMachine()\n  const pair = (\n    <Fragment key={path}>\n      {indent(depth)}\n      <AttributeNode value={attribute} />\n      {node({value, path, depth: depth + 1, nodeWrapper: NodeWrapper})}\n      {isLastKey ? (\n        '\\n'\n      ) : (\n        <>\n          {char(',')}\n          {'\\n'}\n        </>\n      )}\n    </Fragment>\n  )\n\n  return NodeWrapper ? (\n    <NodeWrapper type=\"attributePair\" path={path}>\n      {pair}\n    </NodeWrapper>\n  ) : (\n    pair\n  )\n}\n\nfunction NullNode() {\n  return useToken('nil', 'null')\n}\n\nfunction json(value: unknown) {\n  return JSON.stringify(value)\n}\n\nfunction indent(depth: number): string {\n  return '  '.repeat(depth)\n}\n\nfunction unwrapTheme(theme: JasonTheme | EsModuleJasonTheme): JasonTheme {\n  return '__esModule' in theme ? theme.default : theme\n}\n\nfunction defaultKeySorter(keyA: string, keyB: string): number {\n  return keyA.localeCompare(keyB)\n}\n"],"names":["JasonContext","createContext","useTokenMachine","token","useContext","char","useCallback","sym","useToken","children","as","defaultItemKeyGenerator","item","basePath","index","sanityItemKeyGenerator","obj","Array","isArray","isObject","_key","sharedRoot","fontFamily","fontFeatureSettings","lineHeight","whiteSpace","margin","styles","root","Object","assign","backgroundColor","attribute","color","unquotedAttribute","string","nil","number","boolean","punctuation","JSON_TYPES","isJsonType","includes","ReactJason","value","wrappedTheme","theme","nodeWrapper","itemKeyGenerator","sortKeys","quoteAttributes","React","useMemo","style","undefined","className","classes","Boolean","createElement","createTokenMachine","defaultTheme","keySorter","defaultKeySorter","getItemKey","context","Provider","node","path","depth","NodeWrapper","wrap","type","NullNode","ArrayNode","StringNode","NumberNode","BooleanNode","ObjectNode","Error","unquoted","json","slice","numItems","length","indent","map","itemPath","isLast","Fragment","key","rawKeys","keys","sort","a","b","numKeys","lastKey","val","propPath","AttributePair","isLastKey","AttributeNode","attributeName","pair","JSON","stringify","repeat","keyA","keyB","localeCompare"],"mappings":"+GAKaA,EAAeC,EAAoC,aAEhDC,QACPC,EAASC,EAAWJ,GAApBG,MACDE,EAAOC,EACX,SAACC,UAAgBJ,EAAc,MAARI,GAAuB,MAARA,EAAc,YAAc,cAAeA,IACjF,CAACJ,IAEH,MAAO,CAACA,MAAAA,EAAOE,KAAAA,YAGDG,EAASL,EAAkBM,EAA4BC,GACrE,gBADqEA,IAAAA,EAAK,QACnER,IAAkBC,MAAMA,EAAOM,EAAUC,GCdrCC,IAAAA,EAA4C,SAEvDC,EACAC,EACAC,GAEA,OAAUD,MAAYC,OAGXC,EAA2C,SACtDH,EACAC,EACAC,GAEA,OAGF,SAAkBE,GAChB,MAAsB,iBAARA,GAA4B,OAARA,IAAiBC,MAAMC,QAAQF,GAI1DG,CADcH,EAPAJ,IAQuB,iBAAbI,EAAII,KARHP,aAAmBD,EAAKQ,UAAcP,MAAYC,MAOpF,IAAuBE,GCtBVK,EAA4B,CACvCC,WAAY,0CACZC,oBAAqB,qBACrBC,WAAY,QACZC,WAAY,MACZC,OAAQ,KCLK,CACbC,OAAQ,CACNC,KAAMC,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,YACtDC,UAAW,CAACC,MAAO,WACnBC,kBAAmB,CAACD,MAAO,WAC3BE,OAAQ,CAACF,MAAO,WAChBG,IAAK,CAACH,MAAO,WACbI,OAAQ,CAACJ,MAAO,WAChBK,QAAS,CAACL,MAAO,WACjBM,YAAa,CAACN,MAAO,aCPfJ,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,YCAhDF,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,YCAhDF,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,YCAhDF,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,YCAhDF,OAAOC,OAAO,GAAIT,EAAY,CAACU,gBAAiB,aCoBpDS,EAAa,CAAC,SAAU,SAAU,SAAU,WAC5CC,EAAa,SAAC7B,UAA2B4B,EAAWE,gBAAgB9B,IAE7D+B,EAAa,gBACxBC,IAAAA,MACOC,IAAPC,MACAC,IAAAA,YACAC,IAAAA,qBACAC,SAAAA,oBACAC,gBAAAA,gBAEM/C,EAAQgD,EAAMC,QAClB,2BThB+BN,GACjC,gBACE3C,EACAM,EACAC,YAAAA,IAAAA,EAAK,QAEL,IAAM2C,EAAQP,EAAMnB,OAASmB,EAAMnB,OAAOxB,QAASmD,EAC7CC,EAAYT,EAAMU,QAAUV,EAAMU,QAAQrD,QAASmD,EAEzD,OADeG,QAAQJ,GAASE,GAChBG,EAAchD,EAAI,CAAC2C,MAAAA,EAAOE,UAAAA,GAAY9C,GAAY0C,gCAAG1C,ISO/DkD,CAAmBd,EA4QpB,eADYC,EA3QmCD,GA4QvBC,UAAgBA,EA5QuBc,GA2QxE,IAAqBd,GA1QjB,CAACD,IAGGgB,GAAyB,IAAbZ,EAAoBa,EAAmBb,EACnDc,EAAaf,GAAoBrC,EACjCqD,EAAUb,EAAMC,QACpB,iBAAO,CAACjD,MAAAA,EAAO4D,WAAAA,EAAYb,gBAAAA,EAAiBH,YAAAA,EAAaE,SAAUY,IACnE,CAAC1D,EAAO4D,EAAYb,EAAiBH,EAAac,IAGpD,OACEV,gBAACnD,EAAaiE,UAASrB,MAAOoB,GAC3B7D,EAAM,OAAQ+D,EAAK,CAACtB,MAAAA,EAAOuB,KAAM,GAAIC,MAAO,EAAGrB,YAAAA,IAAe,SAKrE,SAASmB,SACPtB,IAAAA,MACAuB,IAAAA,KACAC,IAAAA,MACaC,IAAbtB,YAOMuB,EAAO,SAAC7D,EAA8B8D,UAC1CF,EACElB,gBAACkB,GAAYF,KAAMA,EAAMI,KAAMA,GAC5B9D,GAGHA,GAGJ,GAAc,OAAVmC,EACF,OAAO0B,EAAKnB,gBAACqB,QAAa,OAG5B,GAAIvD,MAAMC,QAAQ0B,GAChB,OAAO0B,EAAKnB,gBAACsB,GAAU7B,MAAOA,EAAOuB,KAAMA,EAAMC,MAAOA,IAAW,SAGrE,cAAexB,GACb,IAAK,SACH,OAAO0B,EAAKnB,gBAACuB,GAAW9B,MAAOA,EAAOuB,KAAMA,EAAMC,MAAOA,IAAW,UACtE,IAAK,SACH,OAAOE,EAAKnB,gBAACwB,GAAW/B,MAAOA,EAAOuB,KAAMA,EAAMC,MAAOA,IAAW,UACtE,IAAK,UACH,OAAOE,EAAKnB,gBAACyB,GAAYhC,MAAOA,EAAOuB,KAAMA,EAAMC,MAAOA,IAAW,WACvE,IAAK,SACH,OAAOE,EACLnB,gBAAC0B,GAAWjC,MAAOA,EAAkCuB,KAAMA,EAAMC,MAAOA,IACxE,UAEJ,QACE,UAAUU,+BAA+BlC,IAI/C,SAAS8B,SAAY9B,IAAAA,MACZvC,EAAQH,SACT6E,EAAWC,EAAKpC,GAAOqC,MAAM,GAAI,GACvC,OAAOzE,EACL,SACA2C,gCACG9C,EAAK,KACL0E,EACA1E,EAAK,OAKZ,SAASsE,KACP,OAAOnE,EAAS,WADGoC,OAIrB,SAASgC,KACP,OAAOpE,EAAS,YADIoC,MACe,OAAS,SAG9C,SAAS6B,SAAW7B,IAAAA,MAAOuB,IAAAA,KAAMC,IAAAA,QACTlE,IAAfC,IAAAA,MAAOE,WACoBD,EAAWJ,GAAtC+D,IAAAA,WAAYhB,IAAAA,YACbmC,EAAWtC,EAAMuC,OACvB,OACShF,EACL,QAFa,IAAb+E,EAGA/B,gCACG9C,EAAK,KACLA,EAAK,MAOV8C,gCACG9C,EAAK,UACA+E,EAAOhB,GACZxB,EAAMyC,IAAI,SAACzE,EAAME,GAChB,IAAMwE,EAAWvB,EAAWnD,EAAMuD,EAAMrD,GAClCyE,EAASzE,IAAUoE,EAAW,EAEpC,OACE/B,gBAACqC,GAASC,IAAKH,GACZ7C,EAAW7B,GACVsD,EAAK,CAACtB,MAAOhC,EAAMuD,KAAMmB,EAAUlB,MAAOA,EAAQ,EAAGrB,YAAAA,IAErDI,2CAAcvC,UAEf2E,OACMH,EAAOhB,EAAQ,GAEpBjB,gCACG9C,EAAK,UACA+E,EAAOhB,OAMtB/D,EAAK,OAKZ,SAASwE,SACA7D,IAAP4B,MACAuB,IAAAA,KACAC,IAAAA,QAMgChE,EAAWJ,GAApC+C,IAAAA,YAAaE,IAAAA,WACE/C,IAAfC,IAAAA,MAAOE,SACRuC,EAAQ5B,EACR0E,EAAU7D,OAAO8D,KAAK/C,GACtB+C,EAAO1C,EAAWyC,EAAQE,KAAK,SAACC,EAAGC,UAAM7C,EAAS4C,EAAGC,EAAGlD,KAAU8C,EAClEK,EAAUJ,EAAKR,OACfa,EAAUD,EAAU,EAC1B,OACS5F,EACL,SAFY,IAAZ4F,EAGA5C,gCACG9C,EAAK,KACLA,EAAK,MAOV8C,gCACG9C,EAAK,KACL,KACAsF,EAAKN,IAAI,SAACI,EAAK3E,GACd,IAAMmF,EAAMrD,EAAM6C,GACZS,EAAW/B,EAAUA,MAAQsB,EAAQA,EAC3C,OAAKhD,EAAWwD,GAKd9C,gBAACqC,GAASC,IAAKS,GACb/C,gBAACgD,GACCnE,UAAWyD,EACX7C,MAAOqD,EACP7B,MAAOA,EACPD,KAAM+B,EACNnD,YAAaA,EACbqD,UAAWtF,IAAUkF,YAK5BZ,EAAOhB,EAAQ,GACf/D,EAAK,OAKZ,SAASgG,SAKHrE,EALkBY,IAAAA,MACfM,EAAmB9C,EAAWJ,GAA9BkD,kBACehD,IAAfC,IAAAA,MAAOE,SACRiG,EAAgBtB,EAAKpC,GAAOqC,MAAM,GAAI,GAgB5C,OAZEjD,EADEkB,GAAmBoD,EAAc5D,SAAS,KAChCvC,EACV,YACAgD,gCACG9C,EAAK,KACLiG,EACAjG,EAAK,OAIEF,EAAM,oBAAqBmG,GAIvCnD,gCACGnB,EACA3B,EAAK,KAAM,KAKlB,SAAS8F,SACPnE,IAAAA,UACAY,IAAAA,MACAuB,IAAAA,KACAC,IAAAA,MACAgC,IAAAA,UACa/B,IAAbtB,YASO1C,EAAQH,SACTqG,EACJpD,gBAACqC,GAASC,IAAKtB,GACZiB,EAAOhB,GACRjB,gBAACkD,GAAczD,MAAOZ,IACrBkC,EAAK,CAACtB,MAAAA,EAAOuB,KAAAA,EAAMC,MAAOA,EAAQ,EAAGrB,YAAasB,IAClD+B,EACC,KAEAjD,gCACG9C,EAAK,KACL,OAMT,OAAOgE,EACLlB,gBAACkB,GAAYE,KAAK,gBAAgBJ,KAAMA,GACrCoC,GAGHA,EAIJ,SAAS/B,IACP,OAAOhE,EAAS,MAAO,QAGzB,SAASwE,EAAKpC,GACZ,OAAO4D,KAAKC,UAAU7D,GAGxB,SAASwC,EAAOhB,GACd,MAAO,KAAKsC,OAAOtC,GAOrB,SAASN,EAAiB6C,EAAcC,GACtC,OAAOD,EAAKE,cAAcD"}